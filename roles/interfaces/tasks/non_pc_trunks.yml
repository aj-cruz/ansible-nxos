---
# CONFIGURE LAYER 2 TRUNK INTERFACES

- name: NON-PC TRUNKS- Generate Physical Interface Properties Payload
  ansible.builtin.set_fact:
    nxos_phys_int_properties: "{{ lookup('template', 'phys_int_properties.j2') }}"

- name: NON-PC TRUNKS- Configure Physical Interface Properties
  cisco.nxos.nxos_interfaces:
    config: "{{ nxos_phys_int_properties | from_yaml }}"
    state: overridden

- name: NON-PC TRUNKS- Generate L2 Interface Properties Payload
  ansible.builtin.set_fact:
    nxos_l2_int_properties: "{{ lookup('template', 'l2_int_properties.j2') }}"

- name: NON-PC TRUNKS- Configure L2 Interface Properties
  cisco.nxos.nxos_l2_interfaces:
    config: "{{ nxos_l2_int_properties | from_yaml }}"
    state: replaced

- name: Generate Current Interface Configurations
  cisco.nxos.nxos_command:
    commands: "{{ lookup('template', 'show_interfaces.j2') | from_yaml }}"
  register: nxos_show_ints

- name: Create Spanning Tree Interface Status Dictionary
  ansible.builtin.set_fact:
    nxos_if_dict: "{% if item | length > 2 %}{{ nxos_if_dict|default({}) | combine({item[1].replace('interface ', ''): item[2] | trim }) }}{% else %}{{ nxos_if_dict|default({}) | combine({item[1].replace('interface ', ''): '' }) }}{% endif %}"
  loop: "{{ nxos_show_ints.stdout_lines }}"

- name: Configure Interface Spanning Tree
  cisco.nxos.nxos_config:
    parents: "interface {{ item.interface }}"
    lines: "{% if item.stp_port_type %}spanning-tree port type {{ item.stp_port_type }}{% endif %}"
  loop: "{{ trunk_interfaces }}"
  when: item.stp_port_type is defined and item.stp_port_type

- name: Remove Spanning Tree Interface Configuration As Needed
  cisco.nxos.nxos_config:
    parents: "interface {{ item.interface }}"
    lines: "no spanning-tree port type"
  loop: "{{ trunk_interfaces }}"
  when: not item.stp_port_type and not nxos_if_dict[item.interface] == ''