---
# CONFIGURE LAYER 2 TRUNK INTERFACES

- name: Build list of current interface configurations
  cisco.nxos.nxos_command:
    commands: 
      - command: show run interface
        output: json
  register: nxos_current_int_config

- name: Render list of interfaces with non-default configuration
  ansible.builtin.set_fact:
    nxos_non_default_phys_ints: "{{ lookup('template', 'non_default_ints.j2') }}"

# CONFIGURE PHYSICAL INTERFACE PROPERTIES
- name: NON-PC TRUNKS- Generate Physical Interface Properties Payload
  ansible.builtin.set_fact:
    nxos_phys_int_properties: "{{ lookup('template', 'phys_int_properties.j2') }}"

- name: NON-PC TRUNKS- Configure Physical Interface Properties
  cisco.nxos.nxos_interfaces:
    config: "{{ nxos_phys_int_properties | from_yaml }}"
    state: overridden

# CONFIGURE TRUNK INTERFACE PROPERTIES
- name: NON-PC TRUNKS- Generate L2 Interface Properties Payload
  ansible.builtin.set_fact:
    nxos_l2_int_properties: "{{ lookup('template', 'l2_int_properties.j2') }}"

- name: NON-PC TRUNKS- Configure L2 Interface Properties
  cisco.nxos.nxos_l2_interfaces:
    config: "{{ nxos_l2_int_properties | from_yaml }}"
    state: replaced

# CONFIGURE INTERFACE SPANNING TREE
- name: Generate Current Spanning Tree Interface Configurations For Inventory Interfaces
  cisco.nxos.nxos_command:
    commands: "{{ lookup('template', 'show_int_stp.j2') | from_yaml }}"
  register: nxos_current_stp_config

- name: Create Spanning Tree Interface Status Dictionary
  ansible.builtin.set_fact:
    nxos_if_dict: "{% if item | length > 2 %}{{ nxos_if_dict|default({}) | combine({item[1].replace('interface ', ''): item[2] | trim }) }}{% else %}{{ nxos_if_dict|default({}) | combine({item[1].replace('interface ', ''): '' }) }}{% endif %}"
  loop: "{{ nxos_current_stp_config.stdout_lines }}"

- name: Configure Interface Spanning Tree
  cisco.nxos.nxos_config:
    parents: "interface {{ item.interface }}"
    lines: "{% if item.stp_port_type %}spanning-tree port type {{ item.stp_port_type }}{% endif %}"
  loop: "{{ trunk_interfaces }}"
  when: item.stp_port_type is defined and item.stp_port_type

- name: Remove Spanning Tree Interface Configuration As Needed
  cisco.nxos.nxos_config:
    parents: "interface {{ item.interface }}"
    lines: "no spanning-tree port type"
  loop: "{{ trunk_interfaces }}"
  when: not item.stp_port_type and not nxos_if_dict[item.interface] == ''

# DEFAULT INTERFACES THAT HAVE BEEN REMOVED FROM THE PLAYBOOK
- name: Default Interfaces Removed From the Playbook
  cisco.nxos.nxos_config:
    lines: "default interface {{ item }}"
  loop: "{{ nxos_non_default_phys_ints | from_yaml }}"
  when: not trunk_interfaces | selectattr('interface', 'match', item)